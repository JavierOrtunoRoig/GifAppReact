{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helper/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","lastValue","alert","type","value","onChange","target","GifGridItem","img","title","url","ulr","className","href","rel","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","element","ReactDOM","render","document","getElementById"],"mappings":"+MAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAmBvC,OACI,sBAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAe,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAC9CN,EAAc,KAEdO,MAAM,wBAKV,SACI,uBACIC,KAAK,OACLC,MAAQV,EACRW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,aCgBhBG,EArBK,SAAC,GAAgC,IAAD,IAA7BC,IAAMC,EAAuB,EAAvBA,MAAYC,EAAW,EAAhBC,IAGhC,OACI,sBAAKC,UAAU,8CAAf,UACI,mBAAIC,KAAMH,EACNJ,OAAO,SACPQ,IAAI,aAFR,SAGI,qBAAKC,IAAML,EAAMM,IAAMP,MAE3B,kCAAMA,EAAN,W,uBCIGQ,EAjBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAENT,EAFM,iDAE2CU,UAAUF,GAFrD,+DAIMG,MAAMX,GAJZ,cAINY,EAJM,gBAKWA,EAAIC,OALf,uBAKJC,EALI,EAKJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAlB,GAAQ,IAAD,EAC1B,MAAO,CACHmB,GAAInB,EAAImB,GACRlB,MAAOD,EAAIC,MACXE,IAAG,UAAEH,EAAIoB,cAAN,aAAE,EAAYC,iBAAiBnB,QAX9B,kBAcLe,GAdK,4CAAH,sDCoCEK,EA9BC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHN,SAACA,GAAc,IAAD,EAEZzB,mBAAS,CAC/B+B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDX0BK,CAAanB,GAAjCU,EAHiB,EAGtBJ,KAAaO,EAHS,EAGTA,QAGrB,OACI,qCACI,qBAAInB,UAAU,mCAAd,cAAoDM,EAApD,OAECa,GAAW,2CAEZ,qBAAKnB,UAAU,YAAf,SAEQgB,EAAOF,KAAI,SAAAlB,GAAG,OACV,cAAC,EAAD,CAEIA,IAAMA,GADAA,EAAImB,aEQvBW,EA1BM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,WAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAgBA,IAEpB,uBAEA,6BAEQ+C,EAAWb,KAAK,SAAAc,GAAO,OACnB,cAAC,EAAD,CACItB,SAAUsB,GACLA,YCdjCC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3f8b65d2.chunk.js","sourcesContent":["import React, { useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSumbit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( (lastValue) => [inputValue, ...lastValue] );\r\n            setinputValue('');\r\n        } else {\r\n            alert(\"Nombre no válido\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSumbit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />   \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({ img: {title, ulr: url} }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft \">\r\n            <a  href={url}\r\n                target=\"_blank\" \r\n                rel=\"noreferrer\">\r\n                <img src={ url } alt={ title } />\r\n            </a>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    url: PropTypes.string\r\n}\r\n\r\nexport default GifGridItem\r\n","const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=P8GTmmfIhasYPGn2DNqVSlvjEcij1g2v`;\r\n\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            ulr: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n};\r\n\r\nexport default getGifs;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flash\"> { category } </h3>   \r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            img={ img } \r\n                        />  \r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helper/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]); // ComponentDivMount de una clase. Lo que hay entre corchetes son las depencias, en este caso, al pasarle el category, si cambia, recargará el componente\r\n\r\n    return state;\r\n};","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory.jsx';\r\nimport GifGrid from './components/GifGrid.jsx';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>   \r\n            <AddCategory \r\n                setCategories={ setCategories }\r\n            />\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( element => (\r\n                        <GifGrid\r\n                            category={element}\r\n                            key={element}\r\n                        />\r\n                    ))\r\n                 }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}